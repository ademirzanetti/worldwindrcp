package worldwind.contrib.layers.todo;

import gov.nasa.worldwind.layers.Layer;
import gov.nasa.worldwind.layers.LayerList;

import java.util.Iterator;
import java.util.Vector;

import worldwind.contrib.Messages;
import worldwind.contrib.layers.loop.HTTPGOESLoopFileLayer;
import worldwind.contrib.parsers.ParserUtils;


/**
 * NOAA GOES Sat imagery layer list from http://www.ssd.noaa.gov/goes/.
 * <p>These layers are animated ground overlays
 * @author Vladimir Silva
 *
 */
public class HTTPGOESLoopFileLayerList extends LayerList
{
	private static final long serialVersionUID = -4864732699495970754L;

	/**
	 * Constructor
	 * @param world
	 */
	public HTTPGOESLoopFileLayerList()  
	{
		try 
		{
			// Parse GOES Dataset XML file
			Vector<ParserUtils.HTTPDataSet> v = 
				ParserUtils.parseHTTPDatasetXMLFile( 
					Messages.getInputStream(HTTPGOESLoopFileLayerList.class
						, Messages.getText("layers.goes.xml.file")));
			
			for (int i = 0; i < v.size(); i++) 
			{
				ParserUtils.HTTPDataSet ds = (ParserUtils.HTTPDataSet)v.get(i);
				try {
					final HTTPGOESLoopFileLayer layer = new HTTPGOESLoopFileLayer(ds);
					
					// build overlays for all HTTP frames
					layer.buildOverlays();
					
					super.add( layer ); 

				} catch (Exception e) {
					System.err.println("Unable to load layer " + ds.name  + ": " + e.getMessage() );
				}
				
			}
			
/*			
			super.add(new HTTPGOESLoopFileLayer(
					Messages.getText("layers.goes.eastus.avn.name")
					, new URL(Messages.getText("layers.goes.eastus.avn.loopfile.url"))
					, Messages.getText("layers.goes.eastus.avn.url.pref")
					, new Sector(
			    			Angle.fromDegrees(20.0), Angle.fromDegrees(55.0),
			                Angle.fromDegrees( -112.5 ), Angle.fromDegrees(-47.5)
			                )
					, world
					)
			);
*/
			
		} catch (Exception e) {
			e.printStackTrace();
			throw new IllegalArgumentException(e);
		}
	}
	
	public void setAllEnabled (boolean enabled)
	{
		for (Iterator<Layer> iterator = iterator(); iterator.hasNext();) {
			Layer l = (Layer) iterator.next();
			l.setEnabled(enabled);
		}
	}

}
