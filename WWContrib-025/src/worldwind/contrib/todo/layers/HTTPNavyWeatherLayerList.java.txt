package worldwind.contrib.layers.todo;

import gov.nasa.worldwind.layers.Layer;
import gov.nasa.worldwind.layers.LayerList;

import java.util.Iterator;
import java.util.Vector;


import worldwind.contrib.Messages;
import worldwind.contrib.layers.loop.HTTPNavyWeatherLayer;
import worldwind.contrib.parsers.ParserUtils;


/**
 * Navy Research Labs Marine Meteorology Division Monterey - California
 * http://www.nrlmry.navy.mil/
 * Near real time weather images
 * 
 * @author Owner
 *
 */
public class HTTPNavyWeatherLayerList extends LayerList
{

	private static final long serialVersionUID = 1574396265218485752L;


	public HTTPNavyWeatherLayerList() 
		throws IllegalArgumentException
	{
		try {
			/*
			 * Parse NRL XML file: config/www.nrlmry.navy.mil.xml
			 */
			Vector<ParserUtils.HTTPDataSet> v = 
				ParserUtils.parseHTTPDatasetXMLFile(
					Messages.getInputStream(HTTPNavyWeatherLayerList.class
						, Messages.getText("layers.nrl.xml.file")));
			
			for (int i = 0; i < v.size(); i++) {
				ParserUtils.HTTPDataSet ds = (ParserUtils.HTTPDataSet)v.get(i);
				try {
					HTTPNavyWeatherLayer layer = new HTTPNavyWeatherLayer(ds);
					layer.buildOverlays();
					
					super.add(layer); 
					
				} catch (Exception e) {
					System.err.println("Unable to load layer " 
							+ ds.name  
							+ ": " + e.getClass().getName() 
							+ " " + e.getMessage() );
				}
			}
			
		} catch (Exception e) {
			throw new IllegalArgumentException(e);
		}
	}

	
	public void setAllEnabled (boolean enabled)
	{
		for (Iterator<Layer> iterator = iterator(); iterator.hasNext();) {
			Layer l = (Layer) iterator.next();
			l.setEnabled(enabled);
		}
	}

}
